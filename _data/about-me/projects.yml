data:
  - title:
      ko: "AI Agent-based Augmented Reading eXperience (AReX)"
      en: "AI Agent-based Augmented Reading eXperience (AReX)"
    status:
      ko: "대회 참가작"
      en: "Competition Entry"
      color: info
    images:
      - url: "/images/projects/arex-1.png"
        orientation: landscape
      - url: "/images/projects/arex-2.png"
        orientation: landscape
      - url: "/images/projects/arex-3.png"
        orientation: landscape
      - url: "/images/projects/arex-4.svg"
        orientation: portrait
      - url: "/images/projects/arex-5.svg"
        orientation: landscape
    team:
      name:
        ko: "The Geppettos"
        en: "The Geppettos"
      size: 2
    period:
      period_str: "2025.07 ~"
      type: development
    specs:
      - typescript
      - react
      - express
      - python
      - docker
      - rabbitmq
      - postgresql
      - langchain
      - chroma
    description:
      - type: paragraph
        inner:
          ko: "AReX는 Agent AI-based Augmented Reading eXperience의 약자로, 소설책에 특화된 LLM 기반 전자책 서비스입니다. 대학 동기와 함께 개발하였으며, 오픈소스 개발자대회와 사이드임팩트에 출품해 현재 심사 중입니다. 독서량 감소 문제를 해결하고 소설책을 더 즐겁게 읽을 수 있는 방법을 고민하며 착안한 아이디어로, 소설 속 등장인물을 모방하는 대화형 챗봇 기능을 제공합니다. RAG 구조를 활용한 LLM 설계를 통해 사용자가 책 속 인물과 대화하며 몰입할 수 있는 인터랙티브 독서 경험을 구현했습니다."
          en: "AReX stands for Agent AI-based Augmented Reading eXperience, an LLM-based e-book service specialized for novels. Developed in collaboration with a university peer, it is currently under review after being submitted to an open-source developer competition and Side Impact. The idea was conceived to address the issue of declining reading habits and to enhance the enjoyment of reading novels by providing an interactive chatbot feature that mimics characters from the novels. By utilizing an LLM design based on the RAG structure, we have created an immersive interactive reading experience where users can converse with characters from the book."

      - type: link_buttons
        inner:
          - label:
              ko: "웹사이트"
              en: "Website"
            url: "https://arex-prototype.shop"
          - label:
              ko: "소스코드"
              en: "Source Code"
            url: "https://github.com/The-Geppettos/AReX"
          - label:
              ko: "소개 영상"
              en: "Introduction Video"
            url: "https://youtu.be/uCMB6xpeiUM"

      - type: list
        inner:
          - ko: "LLM 기반 챗봇"
            en: "LLM-based chatbot"
          - sublist: true
            inner:
              - ko: "도우미 모드: 독서 중 궁금한 점을 질문하고 답변 제공"
                en: "Helper Mode: Ask questions and provide answers while reading"
              - ko: "등장인물 모드: 작품 속 인물의 말투와 지식을 재현"
                en: "Character Mode: Recreate the tone and knowledge of characters in the work"
          - ko: "RAG (Retrieval-Augmented Generation) 기반 책 문맥 제공"
            en: "RAG (Retrieval-Augmented Generation) based book context provision"
          - sublist: true
            inner:
              - ko: "사용자가 현재까지 읽은 범위 내로 한정된 문맥 제공"
                en: "Provide context limited to the range the user has read so far"
          - ko: "이벤트 기반 책 원문 전처리 파이프라인 아키텍처"
            en: "Event-driven book text preprocessing pipeline architecture"

  - title:
      ko: "모바일 청첩장"
      en: "Mobile Wedding Invitation"
    images:
      - url: "/images/projects/wedding-invitation-1.png"
        orientation: portrait
    period:
      period_str: "2024.03 ~"
      type: development
    status:
      ko: "오픈소스"
      en: "Open Source"
      color: success
    specs:
      - react
      - go
      - typescript
      - sass
      - nginx
      - sqlite
    description:
      - type: paragraph
        inner:
          ko: "실제 저의 결혼식을 위해 직접 제작한 React 기반 모바일 청첩장입니다. 기존 서비스 디자인의 제약을 극복하기 위해 UI를 직접 설계하고, 도메인을 구입하여 Naver Cloud Platform에 배포해 실제로 사용했습니다. 단순한 개인 용도에서 출발했지만 다른 사용자들의 문의가 들어오면서 오픈소스 템플릿으로 전환했습니다. 현재 재사용성과 확장성을 고려해 지속적으로 개선하고 있습니다."
          en: "This is a React-based mobile wedding invitation that I personally developed for my own wedding. To overcome the design limitations of existing services, I designed the UI myself, purchased a domain, and deployed it on Naver Cloud Platform for actual use. Although it started as a simple personal project, it was converted into an open-source template due to inquiries from other users. I am continuously improving it with reusability and scalability in mind."

      - type: link_buttons
        inner:
          - label:
              ko: "소스코드"
              en: "Source Code"
            url: "https://github.com/juhonamnam/wedding-invitation"
          - label:
              ko: "청첩장 샘플"
              en: "Wedding Invitation Sample"
            url: "https://juhonamnam.github.io/wedding-invitation/"
          - label:
              ko: "후기"
              en: "Review"
            url: "/blog/post/18"

      - type: list
        inner:
          - ko: "다양한 모바일 화면 사이즈에 대응하는 반응형 웹 디자인"
            en: "Responsive web design for various mobile screen sizes"
          - ko: "캐러셀, 모달, 방명록 등 복합적인 Event 기반 UI 기능 구현"
            en: "Complex event based UI features such as carousel, modal, and guestbook"
          - ko: "도메인 연동과 SSL 인증서로 Naver Cloud Platform 배포"
            en: "Deployment on Naver Cloud Platform along with connecting domain and SSL certification"
          - ko: "Naver Map API, Kakao SDK 등 외부 API 연동"
            en: "Integration with external APIs such as Naver Map API and Kakao SDK"
          - ko: "MIT 라이선스로 템플릿 공개 (2025년 8월부터 fork와 star 상승중)"
            en: "Released the template under MIT license (gaining forks and stars since August 2025)"

  - title:
      ko: "개인 웹사이트: Ju Ho Nam's Bits & Bytes"
      en: "Personal Website: Ju Ho Nam's Bits & Bytes"
    hide: true
    images:
      - url: "/images/projects/personal-site-1.png"
        orientation: portrait
    period:
      period_str: "2022.09 ~"
      type: development
    status:
      ko: "운영중"
      en: "Operating"
      color: success
    specs:
      - jekyll
      - html
      - sass
      - markdown
    description:
      - type: paragraph
        inner:
          ko: "기술 블로그와 포트폴리오를 위한 개인 웹 페이지입니다. Minimal Mistakes 테마를 기반으로 제작되었으며, 다양한 방식으로 커스터마이징하고 있습니다."
          en: "This is a personal website for my tech blog and portfolio. It is based on Minimal Mistakes theme, and I am customizing it in various ways."

      - type: link_buttons
        inner:
          - label:
              ko: "소스코드"
              en: "Source Code"
            url: "https://github.com/juhonamnam/juhonamnam.github.io"
          - label:
              ko: "웹사이트"
              en: "Website"
            url: "/"

      - type: list
        inner:
          - ko: "Jekyll과 Liquid Template 기반의 Minimal Mistakes 테마로 제작"
            en: "Built with Jekyll and Liquid Template based on Minimal Mistakes theme"
          - ko: "메타데이터 설정으로 SEO 최적화"
            en: "SEO optimization through metadata settings"
          - ko: "Google, Naver 검색 엔진 등록 및 Google Analytics 분석을 통해 자주 검색되는 주제 파악"
            en: "Registering in Google and Naver search engines along with analyzing searched topics through Google Analytics."

  - title:
      ko: "가상화폐 자동매매 프로그램"
      en: "Cryptocurrency Automated Trading Program"
    images:
      - url: "/images/projects/trade-1.jpg"
        orientation: portrait
      - url: "/images/projects/trade-2.png"
        orientation: portrait
      - url: "/images/projects/trade-3.jpg"
        orientation: portrait
      - url: "/images/projects/trade-4.svg"
        orientation: landscape
    period:
      period_str: "2021.05 ~ 2023.07"
      type: development
    status:
      ko: "서비스 종료"
      en: "Service Discontinued"
      color: warning
    specs:
      - go
      - python
      - mysql
      - docker
    description:
      - type: paragraph
        inner:
          ko: "프로그래밍 입문 시 개발한 투자 알고리즘 자동화 프로그램입니다. 래리 윌리엄스의 변동성 돌파 전략을 참고해 투자 알고리즘을 직접 설계하고, Python과 UPbit Open API를 활용해 매수·매도 로직을 자동화했습니다. 또한 투자 전략으로 AI 기반 모델 활용 가능성을 검토해 보기도 했습니다. 실제 자본을 투입해 약 10%의 누적 수익을 냈으며, 이후에는 메신저봇을 통한 모의투자 시그널 시스템으로 발전시켰습니다. 실제 수익을 달성하긴 했지만, 알고리즘이 반드시 일반 투자보다 우월하지 않음을 배웠습니다."
          en: "This is an automated trading program developed when I first started programming. I designed a trading algorithm based on Larry Williams' volatility breakout strategy and automated the buy and sell logic using Python and UPbit Open API. I also explored the possibility of using AI-based models for trading strategies. I achieved a cumulative return of about 10% with real capital, and later evolved it into a mock trading signal system through a messenger bot. Although I achieved actual profits, I learned that algorithms are not necessarily superior to general investing."

      - type: list
        inner:
          - ko: "래리 윌리엄스의 변동성 돌파 전략을 참고해 투자 알고리즘을 직접 설계"
            en: "Design and implement a trading algorithm based on Larry Williams' volatility breakout strategy"
          - ko: "거래소에서 WebSocket Client을 통해 실시간 가격 정보 수신"
            en: "Receive real-time price information from exchanges via WebSocket Client"
          - ko: "Telegram Bot API를 통해 실시간 매수, 매도 시그널 전송"
            en: "Send real-time buy and sell signals via Telegram Bot API"
          - ko: "누적 수익률 10% 달성"
            en: "Achieved cumulative return of 10%"
