languages:
  - ko
  - en

translation:
  affiliation:
    ko: "소속"
    en: "Affiliation"
  team_size:
    ko: "팀 규모"
    en: "Team Size"
  development_period:
    ko: "개발 기간"
    en: "Development Period"
  participated_period:
    ko: "참여 기간"
    en: "Participated Period"
  service_status:
    ko: "서비스 현황"
    en: "Service Status"
  operating:
    ko: "운영중"
    en: "Operating"
  discontinued:
    ko: "종료"
    en: "Discontinued"
  main_features:
    ko: "주요 기능"
    en: "Main Features"
  my_role:
    ko: "담당 역할"
    en: "My Role"

main:
  - hide: true
    title:
      ko: "외관분석 AI"
      en: "Appearance Analysis AI"
    affiliation:
      ko: "CPRO"
      en: "CPRO"
    team_size: 2
    participated_period: "2024.07 ~"
    specs:
      - python
      - pytorch
      - cpp
    description:
      ko: "RetailTrend 서비스에서 동일인 재식별 기술은 방문객의 행동 패턴에 대해 한층 더 정교한 인사이트를 제공합니다. 이 기술은 직원과 중복 방문을 제거한 순방문객 데이터 집계, 방문객의 동선 등 고도화된 분석을 가능하게 합니다. RetailTrend는 각 방문객의 외관 정보를 기반으로 동일인을 식별하는 외관분석 AI를 도입하였습니다."
      en: "Re-identification technology in RetailTrend service provides more refined insights into visitor behavior patterns. This technology allows more advanced analysis such as unique visitor counting which excludes staff and duplicate visits, and visitor paths. RetailTrend has introduced an appearance analysis AI that identifies the same person based on the appearance information of each visitor."
    my_role:
      - ko: "Re-Identification 분야 사전 연구 및 모델 아키텍처 설계"
        en: "Background research in Re-Identification field and model architecture design"
      - ko: "학습 데이터 선정 및 데이터 전처리"
        en: "Selecting and preprocessing training data"
      - ko: "모델 학습 및 평가"
        en: "Training and evaluating the model"
      - ko: "외관분석 AI를 카메라에 내장된 플러그인에 포팅"
        en: "Porting appearance analysis AI to plugin embedded in camera"

  - title:
      ko: "모바일 청첩장"
      en: "Mobile Wedding Invitation"
    affiliation:
      ko: "개인"
      en: "Individual"
    development_period: "2024.03 ~ 2024.08"
    service_status: "discontinued"
    specs:
      - react
      - go
      - typescript
      - sass
      - nginx
      - sqlite
    link_buttons:
      - text:
          ko: "소스코드 바로가기"
          en: "View Source Code"
        url: "https://github.com/juhonamnam/wedding-invitation"
      - text:
          ko: "청첩장 바로가기"
          en: "View Invitation Page"
        url: "https://juhonamnam.github.io/wedding-invitation/"
    description:
      ko: "실제 저의 결혼식을 위해 직접 개발한 모바일 청첩장입니다. 개발 과정에서 외부 라이브러리 사용을 최소화하고, 직접 구현하는 것을 목표로 하였습니다."
      en: "This is a mobile wedding invitation that I developed for my actual wedding. I minimized the use of external libraries and aimed to develop all the features myself."
    main_features:
      - ko: "다양한 모바일 화면 사이즈에 대응하는 반응형 웹 디자인"
        en: "Responsive web design for various mobile screen sizes"
      - ko: "캐러셀, 모달, 방명록 등 복합적인 Event 기반 UI 기능 구현"
        en: "Complex event based UI features such as carousel, modal, and guestbook"
      - ko: "도메인 연동과 SSL 인증서로 Naver Cloud Platform 배포"
        en: "Deployment on Naver Cloud Platform along with connecting domain and SSL certification"
      - ko: "Naver Map API, Kakao SDK 등 외부 API 연동"
        en: "Integration with external APIs such as Naver Map API and Kakao SDK"
      - ko: "간단한 CRUD 서버 구축"
        en: "Simple CRUD server"

  - title:
      ko: "RetailTrend"
      en: "RetailTrend"
    affiliation:
      ko: "CPRO"
      en: "CPRO"
    team_size: 6
    participated_period: "2023.02 ~"
    specs:
      - typescript
      - express
      - go
      - mongodb
      - aws
      - docker
      - react
      - nextjs
    link_buttons:
      - text:
          ko: "RetailTrend 서비스 바로가기"
          en: "View Service Information"
        url: "https://www.retailtrend.com"
    description:
      ko: "RetailTrend는 인공지능 카메라 기반의 오프라인 매장 방문객 분석 서비스입니다. 피플 카운팅, 동선 분석, 성별 연령, 관심 영역 등 다양한 데이터를 클라이언트에게 제공합니다."
      en: "RetailTrend is an AI camera based offline store visitor analysis service. It provides various data such as people counting, path analysis, gender age ratio, and region of interest to clients."
    my_role:
      - ko: "유지보수 및 신규 기능 개발 참여"
        en: "Maintenance and new feature development"
      - ko: "백엔드와 인공지능을 주 업무로 수행하며, 카메라 내장 플러그인, 웹 UI, DevOps 등 나머지 영역에 대해 보조 업무 수행"
        en: "Main role in backend and AI engineering, and secondary role in other areas such as camera embedded plugins, web UI, and DevOps"
      - ko: "카메라의 raw 데이터를 사용자에게 유의미한 통계 데이터로 변환하기 위한 시계열 샘플링 및 리샘플링 알고리즘 개발"
        en: "Developing time series sampling and resampling algorithms to convert raw data from cameras into meaningful statistical data for users"
      - ko: "AWS S3 가비지 제거 및 storage class 등의 정책 도입으로 비용 절감"
        en: "Reducing AWS S3 costs by introducing policies such as removing garbage and storage class"

  - title:
      ko: "개인 웹사이트: Ju Ho Nam's Bits & Bytes"
      en: "Personal Website: Ju Ho Nam's Bits & Bytes"
    affiliation:
      ko: "개인"
      en: "Individual"
    development_period: "2022.09 ~"
    service_status: "operating"
    specs:
      - jekyll
      - html
      - sass
      - markdown
    link_buttons:
      - text:
          ko: "소스코드 바로가기"
          en: "View Source Code"
        url: "https://github.com/juhonamnam/juhonamnam.github.io"
      - text:
          ko: "웹 페이지 바로가기"
          en: "View Website"
        url: "/"
    description:
      ko: "기술 블로그와 포트폴리오를 위한 개인 웹 페이지입니다. Minimal Mistakes 테마를 기반으로 제작되었으며, 다양한 방식으로 커스터마이징하고 있습니다."
      en: "This is a personal website for my tech blog and portfolio. It is based on Minimal Mistakes theme, and I am customizing it in various ways."
    main_features:
      - ko: "No JavaScript 기조의 Liquid 템플릿 기반 정적 페이지"
        en: "Liquid template based static page with no JavaScript as possible"
      - ko: "Github Pages를 통한 정적 배포"
        en: "Static deployment in Github Pages"
      - ko: "Google, Naver 검색 엔진 등록 및 Google Analytics 분석을 통해 자주 검색되는 주제 파악"
        en: "Registering in Google and Naver search engines along with analyzing searched topics through Google Analytics."

  - title:
      ko: "EC-CMS"
      en: "EC-CMS"
    affiliation:
      ko: "J&FIRST"
      en: "J&FIRST"
    team_size: 2
    participated_period: "2022.08 ~ 2023.01"
    specs:
      - react
      - graphql
    description:
      ko: "EC-CMS는 LINE Plus의 E-commerce 컨텐츠 관리 시스템입니다. 저희 팀은 큐레이션 광고 컨텐츠 관리 서비스를 담당하였습니다. 타 회사에 의해 개발된 소스코드에서 확장하여 개발을 해야했기에 타인에 의해 짜여진 코드를 분석하고 이해하는 능력이 요구되었습니다."
      en: "EC-CMS is an E-commerce content management system for LINE Plus. Our team was in charge of the curation advertisement content management service. Since we had to develop over the source code developed by another company, analyzing and understanding the code written by others was crucial."
    my_role:
      - ko: "큐레이션 관리 서비스의 프론트엔드 담당"
        en: "Frontend development for curation management service"
      - ko: "큐레이션, 행사, 행사 제공자, 캠페인 등 여러 데이터 스키마 간의 종속 관계 설정"
        en: "Setting up dependencies between various data schemas such as curation, event, event provider, and campaign"
      - ko: "외부 팀과 소스코드 충돌 해결"
        en: "Resolving source code conflicts with other teams"

  - title:
      ko: "WDM (Wallet Data Management)"
      en: "WDM (Wallet Data Management)"
    affiliation:
      ko: "J&FIRST"
      en: "J&FIRST"
    team_size: 15
    participated_period: "2022.05 ~ 2023.01"
    specs:
      - react
      - nextjs
      - typescript
      - nginx
      - python
    description:
      ko: "WDM은 LINE Plus Wallet 서비스의 데이터를 관리하는 관리자용 서비스입니다. Wallet 서비스 관리자가 데이터베이스 명령을 UI에서 스케줄링이 가능하도록 하는 것이 주요 목적입니다. 팀 내에서 Next.js를 처음으로 도입해봤던 프로젝트이기도 합니다."
      en: "WDM is an administrator service for managing LINE Plus Wallet service data. The main purpose is to provide Wallet service administrators a UI where they can schedule database commands. This was also the first project in the team to introduce Next.js."
    my_role:
      - ko: "프론트엔드 리드 개발자"
        en: "Lead Frontend Developer"
      - ko: "Next.js 도입을 위한 기술 검토, 리펙토링 및 팀원 가이드 준비"
        en: "Technical review, refactoring, and preparing team member guidance for introducing Next.js"
      - ko: "데이터베이스 쿼리 및 Crontab 인풋 검증 알고리즘 구현"
        en: "Implementing database query and Crontab input validation algorithm"

  - title:
      ko: "Monary CMS"
      en: "Monary CMS"
    affiliation:
      ko: "J&FIRST"
      en: "J&FIRST"
    team_size: 15
    participated_period: "2021.12 ~ 2023.01"
    specs:
      - react
      - typescript
      - nginx
    description:
      ko: "Monary는 경제 관련 뉴스와 컨텐츠를 제공하는 LINE Plus 서비스입니다. Monary CMS는 기사, 카테고리, 테그, 특집 기사, 기사 시리즈, 배너 등 다양한 컨텐츠 데이터를 관리합니다. 기사 편집에는 네이버 블로그에서도 사용되는 SmartEditor ONE을 사용합니다."
      en: "Monary is a LINE Plus service that provides economic news and content. Monary CMS is a service that manages content data such as articles, categories, tags, feature articles, article series, banners, etc. SmartEditor ONE, which is also used in Naver Blog, is used for article editing."
    my_role:
      - ko: "기사 관리, 배너 관리, 기사 시리즈 관리 페이지 UI 개발"
        en: "UI development for article management, banner management, and article series management pages"
      - ko: "SmartEditor ONE API을 이용한 기사 편집 페이지 개발"
        en: "Development of article editing page using SmartEditor ONE API"
      - ko: "Drag&Drop, SmartEditor ONE 등 복잡한 사용자 이벤트 처리"
        en: "Processing complex user event such as Drag&Drop and SmartEditor ONE"
      - ko: "사용자 권한에 따른 UI 노출 구분"
        en: "Differentiating UI exposure according to user roles"

  - title:
      ko: "가상화폐 자동매매 시뮬레이션"
      en: "Cryptocurrency Automated Trading Simulation"
    affiliation:
      ko: "개인"
      en: "Individual"
    development_period: "2021.05 ~ 2022.11"
    service_status: "discontinued"
    specs:
      - go
      - python
      - mysql
      - docker
    link_buttons:
      - text:
          ko: "소스코드 바로가기"
          en: "View Source Code"
        url: "https://github.com/juhonamnam/tap-cats"
    description:
      ko: "자동매매 알고리즘을 실시간으로 구현하기 위한 프로젝트입니다. 초기에는 실제로 거래까지 진행하였으나, 이후 시뮬레이션으로 전환하였습니다. Telegram 봇 메시지를 통해 실시간으로 매수 및 매도 시그널을 보내며, 작은 규모의 지인들과 그룹 채팅방으로 메시지를 받았습니다."
      en: "This project was to run a real-time automated trading algorithm. While actual transactions were made at first, it was later switched to simulation only. Buy and sell signals were sent in real-time through Telegram bot messages, and we had a small group of acquaintances in a group chat who received the messages."
    main_features:
      - ko: "변동성 돌파 알고리즘으로 매수, 매도 지점을 실시간으로 판단"
        en: "Determine buy and sell points in real-time using volatility breakout algorithm"
      - ko: "거래소에서 WebSocket을 통해 실시간 가격 정보 수신"
        en: "Receive real-time price information from exchanges via WebSocket"
